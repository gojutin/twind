import{o as n,c as s,a,b as t,t as e,d as p}from"./app.4ddadaaa.js";const o='{"title":"Use with Vue","description":"How to use Twind with Vue","frontmatter":{"title":"Use with Vue","editLink":true,"navbar":true,"sidebar":true,"head":[["meta",{"name":"description","content":"How to use Twind with Vue"}],["meta",{"name":"keywords","content":"twind tailwind css-in-js"}]]},"relativePath":"usage-guides/vue.md","lastUpdated":1623699843612}',c={},r={id:"frontmatter-title"},l=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),i=p('<p>To be written...</p><h4 id="server-side-rendering"><a class="header-anchor" href="#server-side-rendering" aria-hidden="true">#</a> Server Side Rendering</h4><div class="language-js"><pre><code><span class="token comment">// createBundleRenderer works the same</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-server-renderer&#39;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;twind&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> asyncVirtualSheet<span class="token punctuation">,</span> getStyleTag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;twind/server&#39;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app&#39;</span>\n\n<span class="token keyword">const</span> sheet <span class="token operator">=</span> <span class="token function">asyncVirtualSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>sharedOptions<span class="token punctuation">,</span> sheet <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token function">createRenderer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">/* options */</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">ssr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 1. Reset the sheet for a new rendering</span>\n  sheet<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 2. Render the app</span>\n  <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> renderer<span class="token punctuation">.</span><span class="token function">renderToString</span><span class="token punctuation">(</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 3. Create the style tag with all generated CSS rules</span>\n  <span class="token keyword">const</span> styleTag <span class="token operator">=</span> <span class="token function">getStyleTag</span><span class="token punctuation">(</span>sheet<span class="token punctuation">)</span>\n\n  <span class="token comment">// 4. Generate the response html</span>\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;!DOCTYPE html&gt;\n    &lt;html lang=&quot;en&quot;&gt;\n      &lt;head&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>styleTag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/head&gt;\n      &lt;body&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>body<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/body&gt;\n    &lt;/html&gt;\n  </span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span>\n</code></pre></div>',3);c.render=function(p,o,c,u,k,d){return n(),s("div",null,[a("h1",r,[l,t(" "+e(p.$frontmatter.title),1)]),i])};export default c;export{o as __pageData};
