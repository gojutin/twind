import{o as e,c as a,d as t}from"./app.4ddadaaa.js";const n='{"title":"Module: twind/style","description":"","frontmatter":{},"headers":[{"level":2,"title":"Responsive variants","slug":"responsive-variants"},{"level":3,"title":"Composing Components","slug":"composing-components"},{"level":2,"title":"Table of contents","slug":"table-of-contents"},{"level":3,"title":"Interfaces","slug":"interfaces"},{"level":2,"title":"References","slug":"references"},{"level":3,"title":"Animation","slug":"animation"},{"level":3,"title":"Apply","slug":"apply"},{"level":3,"title":"BlendMode","slug":"blendmode"},{"level":3,"title":"BorderStyle","slug":"borderstyle"},{"level":3,"title":"CSSAtKeyframes","slug":"cssatkeyframes"},{"level":3,"title":"CSSAtMedia","slug":"cssatmedia"},{"level":3,"title":"CSSAtSupports","slug":"cssatsupports"},{"level":3,"title":"CSSCustomProperties","slug":"csscustomproperties"},{"level":3,"title":"CSSFactory","slug":"cssfactory"},{"level":3,"title":"CSSProperties","slug":"cssproperties"},{"level":3,"title":"CSSPseudos","slug":"csspseudos"},{"level":3,"title":"CSSRuleValue","slug":"cssrulevalue"},{"level":3,"title":"CSSRules","slug":"cssrules"},{"level":3,"title":"CSSRulesThunk","slug":"cssrulesthunk"},{"level":3,"title":"CSSSimplePseudos","slug":"csssimplepseudos"},{"level":3,"title":"CompletionTokens","slug":"completiontokens"},{"level":3,"title":"Configuration","slug":"configuration"},{"level":3,"title":"Context","slug":"context"},{"level":3,"title":"CoreCompletionTokens","slug":"corecompletiontokens"},{"level":3,"title":"CorePlugins","slug":"coreplugins"},{"level":3,"title":"CoreVariants","slug":"corevariants"},{"level":3,"title":"Corners","slug":"corners"},{"level":3,"title":"CounterStyle","slug":"counterstyle"},{"level":3,"title":"DarkMode","slug":"darkmode"},{"level":3,"title":"Directive","slug":"directive"},{"level":3,"title":"DirectiveHandler","slug":"directivehandler"},{"level":3,"title":"Edges","slug":"edges"},{"level":3,"title":"Empty","slug":"empty"},{"level":3,"title":"Falsy","slug":"falsy"},{"level":3,"title":"FontFace","slug":"fontface"},{"level":3,"title":"FromTheme","slug":"fromtheme"},{"level":3,"title":"GlobalValue","slug":"globalvalue"},{"level":3,"title":"Hasher","slug":"hasher"},{"level":3,"title":"InlineDirective","slug":"inlinedirective"},{"level":3,"title":"Instance","slug":"instance"},{"level":3,"title":"Interpolate","slug":"interpolate"},{"level":3,"title":"InterpolateKind","slug":"interpolatekind"},{"level":3,"title":"Join","slug":"join"},{"level":3,"title":"JoinFromObject","slug":"joinfromobject"},{"level":3,"title":"MaybeArray","slug":"maybearray"},{"level":3,"title":"MaybeThunk","slug":"maybethunk"},{"level":3,"title":"Mode","slug":"mode"},{"level":3,"title":"Negatable","slug":"negatable"},{"level":3,"title":"NonEmptyString","slug":"nonemptystring"},{"level":3,"title":"Plugin","slug":"plugin"},{"level":3,"title":"Plugins","slug":"plugins"},{"level":3,"title":"Prefixer","slug":"prefixer"},{"level":3,"title":"Preflight","slug":"preflight"},{"level":3,"title":"Range","slug":"range"},{"level":3,"title":"ReportInfo","slug":"reportinfo"},{"level":3,"title":"Rule","slug":"rule"},{"level":3,"title":"Screen","slug":"screen"},{"level":3,"title":"Sheet","slug":"sheet"},{"level":3,"title":"SheetConfig","slug":"sheetconfig"},{"level":3,"title":"SheetInit","slug":"sheetinit"},{"level":3,"title":"SheetInitCallback","slug":"sheetinitcallback"},{"level":3,"title":"SimplePseudoClasses","slug":"simplepseudoclasses"},{"level":3,"title":"SimplePseudoElements","slug":"simplepseudoelements"},{"level":3,"title":"TW","slug":"tw"},{"level":3,"title":"TWCallable","slug":"twcallable"},{"level":3,"title":"Theme","slug":"theme"},{"level":3,"title":"ThemeColor","slug":"themecolor"},{"level":3,"title":"ThemeColorObject","slug":"themecolorobject"},{"level":3,"title":"ThemeConfiguration","slug":"themeconfiguration"},{"level":3,"title":"ThemeContainer","slug":"themecontainer"},{"level":3,"title":"ThemeFontSize","slug":"themefontsize"},{"level":3,"title":"ThemeHelper","slug":"themehelper"},{"level":3,"title":"ThemeOutline","slug":"themeoutline"},{"level":3,"title":"ThemeResolver","slug":"themeresolver"},{"level":3,"title":"ThemeScreen","slug":"themescreen"},{"level":3,"title":"ThemeScreenValue","slug":"themescreenvalue"},{"level":3,"title":"ThemeSection","slug":"themesection"},{"level":3,"title":"ThemeSectionRecord","slug":"themesectionrecord"},{"level":3,"title":"ThemeSectionResolver","slug":"themesectionresolver"},{"level":3,"title":"ThemeSectionResolverContext","slug":"themesectionresolvercontext"},{"level":3,"title":"ThemeSectionType","slug":"themesectiontype"},{"level":3,"title":"ToString","slug":"tostring"},{"level":3,"title":"Token","slug":"token"},{"level":3,"title":"TokenGrouping","slug":"tokengrouping"},{"level":3,"title":"TypescriptCompat","slug":"typescriptcompat"},{"level":3,"title":"Unwrap","slug":"unwrap"},{"level":3,"title":"UserCompletionTokens","slug":"usercompletiontokens"},{"level":3,"title":"Variants","slug":"variants"},{"level":3,"title":"animation","slug":"animation-2"},{"level":3,"title":"apply","slug":"apply-2"},{"level":3,"title":"autoprefix","slug":"autoprefix"},{"level":3,"title":"create","slug":"create"},{"level":3,"title":"css","slug":"css"},{"level":3,"title":"cssomSheet","slug":"cssomsheet"},{"level":3,"title":"directive","slug":"directive-2"},{"level":3,"title":"hash","slug":"hash"},{"level":3,"title":"keyframes","slug":"keyframes"},{"level":3,"title":"mode","slug":"mode-2"},{"level":3,"title":"noprefix","slug":"noprefix"},{"level":3,"title":"screen","slug":"screen-2"},{"level":3,"title":"setup","slug":"setup"},{"level":3,"title":"silent","slug":"silent"},{"level":3,"title":"strict","slug":"strict"},{"level":3,"title":"theme","slug":"theme-2"},{"level":3,"title":"tw","slug":"tw-2"},{"level":3,"title":"voidSheet","slug":"voidsheet"},{"level":3,"title":"warn","slug":"warn"},{"level":2,"title":"Type aliases","slug":"type-aliases"},{"level":3,"title":"DefaultVariants","slug":"defaultvariants"},{"level":3,"title":"MorphVariant","slug":"morphvariant"},{"level":3,"title":"StrictMorphVariant","slug":"strictmorphvariant"},{"level":3,"title":"StyleProps","slug":"styleprops"},{"level":3,"title":"StyleToken","slug":"styletoken"},{"level":3,"title":"VariantMatchers","slug":"variantmatchers"},{"level":3,"title":"VariantsOf","slug":"variantsof"},{"level":3,"title":"VariantsProps","slug":"variantsprops"},{"level":2,"title":"Functions","slug":"functions"},{"level":3,"title":"style","slug":"style"}],"relativePath":"api/modules/twind_style.md","lastUpdated":1623699887604}',s={},r=t('<h1 id="module-twind-style"><a class="header-anchor" href="#module-twind-style" aria-hidden="true">#</a> Module: twind/style</h1><p><a href="https://twind.dev/api/modules/twind_style.html" target="_blank" rel="noopener noreferrer"><img src="https://flat.badgen.net/badge/icon/Documentation?icon=awesome&amp;label" alt="Documentation"></a><a href="https://github.com/tw-in-js/twind/tree/main/src/style" target="_blank" rel="noopener noreferrer"><img src="https://flat.badgen.net/badge/icon/tw-in-js%2Ftwind%2Fsrc%2Fstyle?icon=github&amp;label" alt="Github"></a><a href="https://unpkg.com/twind/style/style.js" title="brotli module size" target="_blank" rel="noopener noreferrer"><img src="https://flat.badgen.net/badgesize/brotli/https://cdn.jsdelivr.net/npm/twind/style/style.min.js?icon=jsdelivr&amp;label&amp;color=blue&amp;cache=10800" alt="Module Size"></a><a href="https://unpkg.com/browse/twind/style/style.d.ts" target="_blank" rel="noopener noreferrer"><img src="https://flat.badgen.net/badge/icon/included?icon=typescript&amp;label" alt="Typescript"></a></p><p><code>twind/style</code> is a framework agnostic component API that is heavily inspired by <a href="https://stitches.dev" target="_blank" rel="noopener noreferrer">stitches</a>. It allows you to define composable components which are typed automatically.</p><blockquote><p>For a preview of the React integration take a look at <a href="https://github.com/tw-in-js/twind-react" target="_blank" rel="noopener noreferrer">@twind/react</a>. Other framework integrations will follow.</p></blockquote><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> tw<span class="token punctuation">,</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;twind/style&#39;</span>\n\n<span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// Define the base style using tailwindcss class names</span>\n  base<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rounded-full px-2.5</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n\n  <span class="token comment">// Declare all possible properties</span>\n  variants<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// button({ size: &#39;sm&#39; })</span>\n    size<span class="token operator">:</span> <span class="token punctuation">{</span>\n      sm<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">text-sm h-6</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      md<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">text-base h-9</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// button({ variant: &#39;primary&#39; })</span>\n    variant<span class="token operator">:</span> <span class="token punctuation">{</span>\n      gray<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n        bg-gray-400\n        hover:bg-gray-500\n      </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      primary<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n        text-white bg-purple-400\n        hover:bg-purple-500\n      </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// button({ outlined: true })</span>\n    outlined<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token boolean">true</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">bg-transparent ring-1</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// Set defaults for properties</span>\n  defaults<span class="token operator">:</span> <span class="token punctuation">{</span>\n    variant<span class="token operator">:</span> <span class="token string">&#39;gray&#39;</span><span class="token punctuation">,</span>\n    size<span class="token operator">:</span> <span class="token string">&#39;sm&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// Apply additional styling based on the compination of properties</span>\n  matches<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token comment">// If props match { variant: &#39;gray&#39;, outlined: true } add ring-gray-400</span>\n      variant<span class="token operator">:</span> <span class="token string">&#39;gray&#39;</span><span class="token punctuation">,</span>\n      outlined<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      use<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ring-gray-400</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Use the defaults { variant: &#39;gray&#39;, size: &#39;sm }</span>\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; rounded-full px-2.5 bg-gray-400 hover:bg-gray-500 text-sm h-6</span>\n\n<span class="token comment">// Customize the style</span>\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">{</span> variant<span class="token operator">:</span> <span class="token string">&#39;primary&#39;</span><span class="token punctuation">,</span> size<span class="token operator">:</span> <span class="token string">&#39;md&#39;</span><span class="token punctuation">,</span> outlined<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; rounded-full px-2.5 text-white bg-purple-400 hover:bg-purple-500 text-base h-9 bg-transparent ring-1</span>\n\n<span class="token comment">// Matches props combination</span>\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">{</span> outlined<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; rounded-full px-2.5 bg-gray-400 hover:bg-gray-500 text-sm h-6 bg-transparent ring-1 ring-gray-400</span>\n\n<span class="token comment">// Use the tw property to add special styles</span>\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">{</span> tw<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rounded-sm px-4 mx-auto</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; bg-gray-400 hover:bg-gray-500 text-sm h-6 rounded-sm px-4 mx-auto</span>\n\n<span class="token comment">// Use the css property to add special styles</span>\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">{</span> css<span class="token operator">:</span> <span class="token punctuation">{</span> scrollSnapType<span class="token operator">:</span> <span class="token string">&#39;x&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; rounded-full px-2.5 bg-gray-400 hover:bg-gray-500 text-sm h-6 tw-css</span>\n\n<span class="token comment">// Add additional classes to the component (className is a convenience for jsx)</span>\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">button</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;x y&#39;</span><span class="token punctuation">,</span> className<span class="token operator">:</span> <span class="token string">&#39;a b&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; rounded-full px-2.5 bg-gray-400 hover:bg-gray-500 text-sm h-6 x y a b</span>\n</code></pre></div><p>All configuration properties are optional in which case you have a component (often called box) that only accepts the <code>tw</code>, <code>css</code>, <code>class</code> and <code>className</code> properties.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> tw<span class="token punctuation">,</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;twind/style&#39;</span>\n\n<span class="token keyword">const</span> box <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">box</span><span class="token punctuation">(</span><span class="token punctuation">{</span> tw<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">text-center</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><p>Instead of using strings, eg tailwind class names, you can use CSS objects or the result of <code>css</code> or <code>apply</code>.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> tw<span class="token punctuation">,</span> style<span class="token punctuation">,</span> apply<span class="token punctuation">,</span> css<span class="token punctuation">,</span> theme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;twind/style&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> lineClamp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@twind/line-clamp&#39;</span>\n\n<span class="token keyword">const</span> card <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  base<span class="token operator">:</span> apply<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rounded-sm p-4 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">lineClamp</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n\n  variants<span class="token operator">:</span> <span class="token punctuation">{</span>\n    size<span class="token operator">:</span> <span class="token punctuation">{</span>\n      sm<span class="token operator">:</span> <span class="token string">&#39;text-sm&#39;</span><span class="token punctuation">,</span>\n      lg<span class="token operator">:</span> css<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n        font-size: 3rem;\n        height: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">&#39;spacing.12&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n      </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    variant<span class="token operator">:</span> <span class="token punctuation">{</span>\n      gray<span class="token operator">:</span> <span class="token punctuation">{</span>\n        backgroundColor<span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">&#39;colors.gray.400&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;&amp;:hover&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          backgroundColor<span class="token operator">:</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">&#39;colors.gray.500&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="responsive-variants"><a class="header-anchor" href="#responsive-variants" aria-hidden="true">#</a> Responsive variants</h2><p>You can apply different variants at different breakpoints or even <a href="https://developer.mozilla.org/docs/Web/CSS/At-rule" target="_blank" rel="noopener noreferrer">arbitrary at-rule</a>.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> tw<span class="token punctuation">,</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;twind/style&#39;</span>\n\n<span class="token keyword">const</span> box <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  variants<span class="token operator">:</span> <span class="token punctuation">{</span>\n    color<span class="token operator">:</span> <span class="token punctuation">{</span>\n      coral<span class="token operator">:</span> <span class="token punctuation">{</span>\n        backgroundColor<span class="token operator">:</span> <span class="token string">&#39;coral&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      purple<span class="token operator">:</span> <span class="token punctuation">{</span>\n        backgroundColor<span class="token operator">:</span> <span class="token string">&#39;purple&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      tomato<span class="token operator">:</span> <span class="token punctuation">{</span>\n        backgroundColor<span class="token operator">:</span> <span class="token string">&#39;tomato&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">box</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  color<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Optional initial value</span>\n    initial<span class="token operator">:</span> <span class="token string">&#39;coral&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// Any theme screen value</span>\n    md<span class="token operator">:</span> <span class="token string">&#39;purple&#39;</span><span class="token punctuation">,</span>\n    <span class="token comment">// Some at-rule</span>\n    <span class="token string">&#39;@media (orientation: portrait)&#39;</span><span class="token operator">:</span> <span class="token string">&#39;tomato&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="composing-components"><a class="header-anchor" href="#composing-components" aria-hidden="true">#</a> Composing Components</h3><p>Components can be composed via the <code>style</code> function.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> tw<span class="token punctuation">,</span> style <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;twind/style&#39;</span>\n\n<span class="token keyword">const</span> base <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  base<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">bg-purple-500 text(white md) font-bold</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  variants<span class="token operator">:</span> <span class="token punctuation">{</span>\n    size<span class="token operator">:</span> <span class="token punctuation">{</span>\n      small<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">text-sm h-5 px-2</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      large<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">text-lg h-7 px-5</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> pill <span class="token operator">=</span> <span class="token function">style</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  base<span class="token operator">:</span> <span class="token string">&#39;rounded-full&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">base</span><span class="token punctuation">(</span><span class="token punctuation">{</span> size<span class="token operator">:</span> <span class="token string">&#39;small&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; bg-purple-500 text-white font-bold text-sm h-5 px-2</span>\n\n<span class="token function">tw</span><span class="token punctuation">(</span><span class="token function">pill</span><span class="token punctuation">(</span><span class="token punctuation">{</span> size<span class="token operator">:</span> <span class="token string">&#39;large&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; bg-purple-500 text-white font-bold text-lg h-7 px-5 rounded-full</span>\n</code></pre></div><h2 id="table-of-contents"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="interfaces"><a class="header-anchor" href="#interfaces" aria-hidden="true">#</a> Interfaces</h3><ul><li><a href="./../interfaces/twind_style.basestyleprops.html">BaseStyleProps</a></li><li><a href="./../interfaces/twind_style.style.html">Style</a></li><li><a href="./../interfaces/twind_style.styleconfig.html">StyleConfig</a></li><li><a href="./../interfaces/twind_style.stylefunction.html">StyleFunction</a></li></ul><h2 id="references"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2><h3 id="animation"><a class="header-anchor" href="#animation" aria-hidden="true">#</a> Animation</h3><p>Re-exports: <a href="./../interfaces/twind_css.animation.html">Animation</a></p><hr><h3 id="apply"><a class="header-anchor" href="#apply" aria-hidden="true">#</a> Apply</h3><p>Re-exports: <a href="./../interfaces/twind.apply.html">Apply</a></p><hr><h3 id="blendmode"><a class="header-anchor" href="#blendmode" aria-hidden="true">#</a> BlendMode</h3><p>Re-exports: <a href="./twind.html#blendmode">BlendMode</a></p><hr><h3 id="borderstyle"><a class="header-anchor" href="#borderstyle" aria-hidden="true">#</a> BorderStyle</h3><p>Re-exports: <a href="./twind.html#borderstyle">BorderStyle</a></p><hr><h3 id="cssatkeyframes"><a class="header-anchor" href="#cssatkeyframes" aria-hidden="true">#</a> CSSAtKeyframes</h3><p>Re-exports: <a href="./twind.html#cssatkeyframes">CSSAtKeyframes</a></p><hr><h3 id="cssatmedia"><a class="header-anchor" href="#cssatmedia" aria-hidden="true">#</a> CSSAtMedia</h3><p>Re-exports: <a href="./twind.html#cssatmedia">CSSAtMedia</a></p><hr><h3 id="cssatsupports"><a class="header-anchor" href="#cssatsupports" aria-hidden="true">#</a> CSSAtSupports</h3><p>Re-exports: <a href="./twind.html#cssatsupports">CSSAtSupports</a></p><hr><h3 id="csscustomproperties"><a class="header-anchor" href="#csscustomproperties" aria-hidden="true">#</a> CSSCustomProperties</h3><p>Re-exports: <a href="./../interfaces/twind.csscustomproperties.html">CSSCustomProperties</a></p><hr><h3 id="cssfactory"><a class="header-anchor" href="#cssfactory" aria-hidden="true">#</a> CSSFactory</h3><p>Re-exports: <a href="./../interfaces/twind_css.cssfactory.html">CSSFactory</a></p><hr><h3 id="cssproperties"><a class="header-anchor" href="#cssproperties" aria-hidden="true">#</a> CSSProperties</h3><p>Re-exports: <a href="./../interfaces/twind.cssproperties.html">CSSProperties</a></p><hr><h3 id="csspseudos"><a class="header-anchor" href="#csspseudos" aria-hidden="true">#</a> CSSPseudos</h3><p>Re-exports: <a href="./../interfaces/twind.csspseudos.html">CSSPseudos</a></p><hr><h3 id="cssrulevalue"><a class="header-anchor" href="#cssrulevalue" aria-hidden="true">#</a> CSSRuleValue</h3><p>Re-exports: <a href="./twind.html#cssrulevalue">CSSRuleValue</a></p><hr><h3 id="cssrules"><a class="header-anchor" href="#cssrules" aria-hidden="true">#</a> CSSRules</h3><p>Re-exports: <a href="./../interfaces/twind.cssrules.html">CSSRules</a></p><hr><h3 id="cssrulesthunk"><a class="header-anchor" href="#cssrulesthunk" aria-hidden="true">#</a> CSSRulesThunk</h3><p>Re-exports: <a href="./../interfaces/twind.cssrulesthunk.html">CSSRulesThunk</a></p><hr><h3 id="csssimplepseudos"><a class="header-anchor" href="#csssimplepseudos" aria-hidden="true">#</a> CSSSimplePseudos</h3><p>Re-exports: <a href="./twind.html#csssimplepseudos">CSSSimplePseudos</a></p><hr><h3 id="completiontokens"><a class="header-anchor" href="#completiontokens" aria-hidden="true">#</a> CompletionTokens</h3><p>Re-exports: <a href="./twind.html#completiontokens">CompletionTokens</a></p><hr><h3 id="configuration"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h3><p>Re-exports: <a href="./../interfaces/twind.configuration.html">Configuration</a></p><hr><h3 id="context"><a class="header-anchor" href="#context" aria-hidden="true">#</a> Context</h3><p>Re-exports: <a href="./../interfaces/twind.context.html">Context</a></p><hr><h3 id="corecompletiontokens"><a class="header-anchor" href="#corecompletiontokens" aria-hidden="true">#</a> CoreCompletionTokens</h3><p>Re-exports: <a href="./twind.html#corecompletiontokens">CoreCompletionTokens</a></p><hr><h3 id="coreplugins"><a class="header-anchor" href="#coreplugins" aria-hidden="true">#</a> CorePlugins</h3><p>Re-exports: <a href="./../interfaces/twind.coreplugins.html">CorePlugins</a></p><hr><h3 id="corevariants"><a class="header-anchor" href="#corevariants" aria-hidden="true">#</a> CoreVariants</h3><p>Re-exports: <a href="./twind.html#corevariants">CoreVariants</a></p><hr><h3 id="corners"><a class="header-anchor" href="#corners" aria-hidden="true">#</a> Corners</h3><p>Re-exports: <a href="./twind.html#corners">Corners</a></p><hr><h3 id="counterstyle"><a class="header-anchor" href="#counterstyle" aria-hidden="true">#</a> CounterStyle</h3><p>Re-exports: <a href="./../interfaces/twind.counterstyle.html">CounterStyle</a></p><hr><h3 id="darkmode"><a class="header-anchor" href="#darkmode" aria-hidden="true">#</a> DarkMode</h3><p>Re-exports: <a href="./twind.html#darkmode">DarkMode</a></p><hr><h3 id="directive"><a class="header-anchor" href="#directive" aria-hidden="true">#</a> Directive</h3><p>Re-exports: <a href="./../interfaces/twind.directive.html">Directive</a></p><hr><h3 id="directivehandler"><a class="header-anchor" href="#directivehandler" aria-hidden="true">#</a> DirectiveHandler</h3><p>Re-exports: <a href="./../interfaces/twind.directivehandler.html">DirectiveHandler</a></p><hr><h3 id="edges"><a class="header-anchor" href="#edges" aria-hidden="true">#</a> Edges</h3><p>Re-exports: <a href="./twind.html#edges">Edges</a></p><hr><h3 id="empty"><a class="header-anchor" href="#empty" aria-hidden="true">#</a> Empty</h3><p>Re-exports: <a href="./twind.html#empty">Empty</a></p><hr><h3 id="falsy"><a class="header-anchor" href="#falsy" aria-hidden="true">#</a> Falsy</h3><p>Re-exports: <a href="./twind.html#falsy">Falsy</a></p><hr><h3 id="fontface"><a class="header-anchor" href="#fontface" aria-hidden="true">#</a> FontFace</h3><p>Re-exports: <a href="./../interfaces/twind.fontface.html">FontFace</a></p><hr><h3 id="fromtheme"><a class="header-anchor" href="#fromtheme" aria-hidden="true">#</a> FromTheme</h3><p>Re-exports: <a href="./twind.html#fromtheme">FromTheme</a></p><hr><h3 id="globalvalue"><a class="header-anchor" href="#globalvalue" aria-hidden="true">#</a> GlobalValue</h3><p>Re-exports: <a href="./twind.html#globalvalue">GlobalValue</a></p><hr><h3 id="hasher"><a class="header-anchor" href="#hasher" aria-hidden="true">#</a> Hasher</h3><p>Re-exports: <a href="./twind.html#hasher">Hasher</a></p><hr><h3 id="inlinedirective"><a class="header-anchor" href="#inlinedirective" aria-hidden="true">#</a> InlineDirective</h3><p>Re-exports: <a href="./../interfaces/twind.inlinedirective.html">InlineDirective</a></p><hr><h3 id="instance"><a class="header-anchor" href="#instance" aria-hidden="true">#</a> Instance</h3><p>Re-exports: <a href="./../interfaces/twind.instance.html">Instance</a></p><hr><h3 id="interpolate"><a class="header-anchor" href="#interpolate" aria-hidden="true">#</a> Interpolate</h3><p>Re-exports: <a href="./twind.html#interpolate">Interpolate</a></p><hr><h3 id="interpolatekind"><a class="header-anchor" href="#interpolatekind" aria-hidden="true">#</a> InterpolateKind</h3><p>Re-exports: <a href="./twind.html#interpolatekind">InterpolateKind</a></p><hr><h3 id="join"><a class="header-anchor" href="#join" aria-hidden="true">#</a> Join</h3><p>Re-exports: <a href="./twind.html#join">Join</a></p><hr><h3 id="joinfromobject"><a class="header-anchor" href="#joinfromobject" aria-hidden="true">#</a> JoinFromObject</h3><p>Re-exports: <a href="./twind.html#joinfromobject">JoinFromObject</a></p><hr><h3 id="maybearray"><a class="header-anchor" href="#maybearray" aria-hidden="true">#</a> MaybeArray</h3><p>Re-exports: <a href="./twind.html#maybearray">MaybeArray</a></p><hr><h3 id="maybethunk"><a class="header-anchor" href="#maybethunk" aria-hidden="true">#</a> MaybeThunk</h3><p>Re-exports: <a href="./twind.html#maybethunk">MaybeThunk</a></p><hr><h3 id="mode"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> Mode</h3><p>Re-exports: <a href="./../interfaces/twind.mode.html">Mode</a></p><hr><h3 id="negatable"><a class="header-anchor" href="#negatable" aria-hidden="true">#</a> Negatable</h3><p>Re-exports: <a href="./twind.html#negatable">Negatable</a></p><hr><h3 id="nonemptystring"><a class="header-anchor" href="#nonemptystring" aria-hidden="true">#</a> NonEmptyString</h3><p>Re-exports: <a href="./twind.html#nonemptystring">NonEmptyString</a></p><hr><h3 id="plugin"><a class="header-anchor" href="#plugin" aria-hidden="true">#</a> Plugin</h3><p>Re-exports: <a href="./twind.html#plugin">Plugin</a></p><hr><h3 id="plugins"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> Plugins</h3><p>Re-exports: <a href="./../interfaces/twind.plugins.html">Plugins</a></p><hr><h3 id="prefixer"><a class="header-anchor" href="#prefixer" aria-hidden="true">#</a> Prefixer</h3><p>Re-exports: <a href="./twind.html#prefixer">Prefixer</a></p><hr><h3 id="preflight"><a class="header-anchor" href="#preflight" aria-hidden="true">#</a> Preflight</h3><p>Re-exports: <a href="./../interfaces/twind.preflight.html">Preflight</a></p><hr><h3 id="range"><a class="header-anchor" href="#range" aria-hidden="true">#</a> Range</h3><p>Re-exports: <a href="./twind.html#range">Range</a></p><hr><h3 id="reportinfo"><a class="header-anchor" href="#reportinfo" aria-hidden="true">#</a> ReportInfo</h3><p>Re-exports: <a href="./twind.html#reportinfo">ReportInfo</a></p><hr><h3 id="rule"><a class="header-anchor" href="#rule" aria-hidden="true">#</a> Rule</h3><p>Re-exports: <a href="./../interfaces/twind.rule.html">Rule</a></p><hr><h3 id="screen"><a class="header-anchor" href="#screen" aria-hidden="true">#</a> Screen</h3><p>Re-exports: <a href="./../interfaces/twind_css.screen.html">Screen</a></p><hr><h3 id="sheet"><a class="header-anchor" href="#sheet" aria-hidden="true">#</a> Sheet</h3><p>Re-exports: <a href="./../interfaces/twind.sheet.html">Sheet</a></p><hr><h3 id="sheetconfig"><a class="header-anchor" href="#sheetconfig" aria-hidden="true">#</a> SheetConfig</h3><p>Re-exports: <a href="./../interfaces/twind.sheetconfig.html">SheetConfig</a></p><hr><h3 id="sheetinit"><a class="header-anchor" href="#sheetinit" aria-hidden="true">#</a> SheetInit</h3><p>Re-exports: <a href="./../interfaces/twind.sheetinit.html">SheetInit</a></p><hr><h3 id="sheetinitcallback"><a class="header-anchor" href="#sheetinitcallback" aria-hidden="true">#</a> SheetInitCallback</h3><p>Re-exports: <a href="./twind.html#sheetinitcallback">SheetInitCallback</a></p><hr><h3 id="simplepseudoclasses"><a class="header-anchor" href="#simplepseudoclasses" aria-hidden="true">#</a> SimplePseudoClasses</h3><p>Re-exports: <a href="./twind.html#simplepseudoclasses">SimplePseudoClasses</a></p><hr><h3 id="simplepseudoelements"><a class="header-anchor" href="#simplepseudoelements" aria-hidden="true">#</a> SimplePseudoElements</h3><p>Re-exports: <a href="./twind.html#simplepseudoelements">SimplePseudoElements</a></p><hr><h3 id="tw"><a class="header-anchor" href="#tw" aria-hidden="true">#</a> TW</h3><p>Re-exports: <a href="./../interfaces/twind.tw.html">TW</a></p><hr><h3 id="twcallable"><a class="header-anchor" href="#twcallable" aria-hidden="true">#</a> TWCallable</h3><p>Re-exports: <a href="./../interfaces/twind.twcallable.html">TWCallable</a></p><hr><h3 id="theme"><a class="header-anchor" href="#theme" aria-hidden="true">#</a> Theme</h3><p>Re-exports: <a href="./../interfaces/twind.theme.html">Theme</a></p><hr><h3 id="themecolor"><a class="header-anchor" href="#themecolor" aria-hidden="true">#</a> ThemeColor</h3><p>Re-exports: <a href="./twind.html#themecolor">ThemeColor</a></p><hr><h3 id="themecolorobject"><a class="header-anchor" href="#themecolorobject" aria-hidden="true">#</a> ThemeColorObject</h3><p>Re-exports: <a href="./../interfaces/twind.themecolorobject.html">ThemeColorObject</a></p><hr><h3 id="themeconfiguration"><a class="header-anchor" href="#themeconfiguration" aria-hidden="true">#</a> ThemeConfiguration</h3><p>Re-exports: <a href="./../interfaces/twind.themeconfiguration.html">ThemeConfiguration</a></p><hr><h3 id="themecontainer"><a class="header-anchor" href="#themecontainer" aria-hidden="true">#</a> ThemeContainer</h3><p>Re-exports: <a href="./../interfaces/twind.themecontainer.html">ThemeContainer</a></p><hr><h3 id="themefontsize"><a class="header-anchor" href="#themefontsize" aria-hidden="true">#</a> ThemeFontSize</h3><p>Re-exports: <a href="./twind.html#themefontsize">ThemeFontSize</a></p><hr><h3 id="themehelper"><a class="header-anchor" href="#themehelper" aria-hidden="true">#</a> ThemeHelper</h3><p>Re-exports: <a href="./../interfaces/twind.themehelper.html">ThemeHelper</a></p><hr><h3 id="themeoutline"><a class="header-anchor" href="#themeoutline" aria-hidden="true">#</a> ThemeOutline</h3><p>Re-exports: <a href="./twind.html#themeoutline">ThemeOutline</a></p><hr><h3 id="themeresolver"><a class="header-anchor" href="#themeresolver" aria-hidden="true">#</a> ThemeResolver</h3><p>Re-exports: <a href="./../interfaces/twind.themeresolver.html">ThemeResolver</a></p><hr><h3 id="themescreen"><a class="header-anchor" href="#themescreen" aria-hidden="true">#</a> ThemeScreen</h3><p>Re-exports: <a href="./twind.html#themescreen">ThemeScreen</a></p><hr><h3 id="themescreenvalue"><a class="header-anchor" href="#themescreenvalue" aria-hidden="true">#</a> ThemeScreenValue</h3><p>Re-exports: <a href="./twind.html#themescreenvalue">ThemeScreenValue</a></p><hr><h3 id="themesection"><a class="header-anchor" href="#themesection" aria-hidden="true">#</a> ThemeSection</h3><p>Re-exports: <a href="./twind.html#themesection">ThemeSection</a></p><hr><h3 id="themesectionrecord"><a class="header-anchor" href="#themesectionrecord" aria-hidden="true">#</a> ThemeSectionRecord</h3><p>Re-exports: <a href="./twind.html#themesectionrecord">ThemeSectionRecord</a></p><hr><h3 id="themesectionresolver"><a class="header-anchor" href="#themesectionresolver" aria-hidden="true">#</a> ThemeSectionResolver</h3><p>Re-exports: <a href="./twind.html#themesectionresolver">ThemeSectionResolver</a></p><hr><h3 id="themesectionresolvercontext"><a class="header-anchor" href="#themesectionresolvercontext" aria-hidden="true">#</a> ThemeSectionResolverContext</h3><p>Re-exports: <a href="./../interfaces/twind.themesectionresolvercontext.html">ThemeSectionResolverContext</a></p><hr><h3 id="themesectiontype"><a class="header-anchor" href="#themesectiontype" aria-hidden="true">#</a> ThemeSectionType</h3><p>Re-exports: <a href="./twind.html#themesectiontype">ThemeSectionType</a></p><hr><h3 id="tostring"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> ToString</h3><p>Re-exports: <a href="./twind.html#tostring">ToString</a></p><hr><h3 id="token"><a class="header-anchor" href="#token" aria-hidden="true">#</a> Token</h3><p>Re-exports: <a href="./twind.html#token">Token</a></p><hr><h3 id="tokengrouping"><a class="header-anchor" href="#tokengrouping" aria-hidden="true">#</a> TokenGrouping</h3><p>Re-exports: <a href="./../interfaces/twind.tokengrouping.html">TokenGrouping</a></p><hr><h3 id="typescriptcompat"><a class="header-anchor" href="#typescriptcompat" aria-hidden="true">#</a> TypescriptCompat</h3><p>Re-exports: <a href="./twind.html#typescriptcompat">TypescriptCompat</a></p><hr><h3 id="unwrap"><a class="header-anchor" href="#unwrap" aria-hidden="true">#</a> Unwrap</h3><p>Re-exports: <a href="./twind.html#unwrap">Unwrap</a></p><hr><h3 id="usercompletiontokens"><a class="header-anchor" href="#usercompletiontokens" aria-hidden="true">#</a> UserCompletionTokens</h3><p>Re-exports: <a href="./twind.html#usercompletiontokens">UserCompletionTokens</a></p><hr><h3 id="variants"><a class="header-anchor" href="#variants" aria-hidden="true">#</a> Variants</h3><p>Re-exports: <a href="./../interfaces/twind.variants.html">Variants</a></p><hr><h3 id="animation-2"><a class="header-anchor" href="#animation-2" aria-hidden="true">#</a> animation</h3><p>Re-exports: <a href="./twind_css.html#animation">animation</a></p><hr><h3 id="apply-2"><a class="header-anchor" href="#apply-2" aria-hidden="true">#</a> apply</h3><p>Re-exports: <a href="./twind.html#apply">apply</a></p><hr><h3 id="autoprefix"><a class="header-anchor" href="#autoprefix" aria-hidden="true">#</a> autoprefix</h3><p>Re-exports: <a href="./twind.html#autoprefix">autoprefix</a></p><hr><h3 id="create"><a class="header-anchor" href="#create" aria-hidden="true">#</a> create</h3><p>Re-exports: <a href="./twind.html#create">create</a></p><hr><h3 id="css"><a class="header-anchor" href="#css" aria-hidden="true">#</a> css</h3><p>Re-exports: <a href="./twind_css.html#css">css</a></p><hr><h3 id="cssomsheet"><a class="header-anchor" href="#cssomsheet" aria-hidden="true">#</a> cssomSheet</h3><p>Re-exports: <a href="./twind.html#cssomsheet">cssomSheet</a></p><hr><h3 id="directive-2"><a class="header-anchor" href="#directive-2" aria-hidden="true">#</a> directive</h3><p>Re-exports: <a href="./twind.html#directive">directive</a></p><hr><h3 id="hash"><a class="header-anchor" href="#hash" aria-hidden="true">#</a> hash</h3><p>Re-exports: <a href="./twind.html#hash">hash</a></p><hr><h3 id="keyframes"><a class="header-anchor" href="#keyframes" aria-hidden="true">#</a> keyframes</h3><p>Re-exports: <a href="./twind_css.html#keyframes">keyframes</a></p><hr><h3 id="mode-2"><a class="header-anchor" href="#mode-2" aria-hidden="true">#</a> mode</h3><p>Re-exports: <a href="./twind.html#mode">mode</a></p><hr><h3 id="noprefix"><a class="header-anchor" href="#noprefix" aria-hidden="true">#</a> noprefix</h3><p>Re-exports: <a href="./twind.html#noprefix">noprefix</a></p><hr><h3 id="screen-2"><a class="header-anchor" href="#screen-2" aria-hidden="true">#</a> screen</h3><p>Re-exports: <a href="./twind_css.html#screen">screen</a></p><hr><h3 id="setup"><a class="header-anchor" href="#setup" aria-hidden="true">#</a> setup</h3><p>Re-exports: <a href="./twind.html#setup">setup</a></p><hr><h3 id="silent"><a class="header-anchor" href="#silent" aria-hidden="true">#</a> silent</h3><p>Re-exports: <a href="./twind.html#silent">silent</a></p><hr><h3 id="strict"><a class="header-anchor" href="#strict" aria-hidden="true">#</a> strict</h3><p>Re-exports: <a href="./twind.html#strict">strict</a></p><hr><h3 id="theme-2"><a class="header-anchor" href="#theme-2" aria-hidden="true">#</a> theme</h3><p>Re-exports: <a href="./twind.html#theme">theme</a></p><hr><h3 id="tw-2"><a class="header-anchor" href="#tw-2" aria-hidden="true">#</a> tw</h3><p>Re-exports: <a href="./twind.html#tw">tw</a></p><hr><h3 id="voidsheet"><a class="header-anchor" href="#voidsheet" aria-hidden="true">#</a> voidSheet</h3><p>Re-exports: <a href="./twind.html#voidsheet">voidSheet</a></p><hr><h3 id="warn"><a class="header-anchor" href="#warn" aria-hidden="true">#</a> warn</h3><p>Re-exports: <a href="./twind.html#warn">warn</a></p><h2 id="type-aliases"><a class="header-anchor" href="#type-aliases" aria-hidden="true">#</a> Type aliases</h2><h3 id="defaultvariants"><a class="header-anchor" href="#defaultvariants" aria-hidden="true">#</a> DefaultVariants</h3><p>Ƭ <strong>DefaultVariants</strong>&lt;Variants&gt;: { [key in keyof Variants]?: StrictMorphVariant&lt;keyof Variants[key]&gt; | Record&lt;string, StrictMorphVariant&lt;keyof Variants[key]&gt;&gt; &amp; object}</p><h4 id="type-parameters"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Variants</code></td></tr></tbody></table><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L44" target="_blank" rel="noopener noreferrer">src/style/index.ts:44</a></p><hr><h3 id="morphvariant"><a class="header-anchor" href="#morphvariant" aria-hidden="true">#</a> MorphVariant</h3><p>Ƭ <strong>MorphVariant</strong>&lt;T&gt;: T <em>extends</em> <em>number</em> ? `${T}` | T : T <em>extends</em> <em>true</em> ? <em>boolean</em> | T : T <em>extends</em> <em>false</em> ? <em>boolean</em> | T : T <em>extends</em> `${number}` ? <em>number</em> | T : T</p><h4 id="type-parameters-2"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L26" target="_blank" rel="noopener noreferrer">src/style/index.ts:26</a></p><hr><h3 id="strictmorphvariant"><a class="header-anchor" href="#strictmorphvariant" aria-hidden="true">#</a> StrictMorphVariant</h3><p>Ƭ <strong>StrictMorphVariant</strong>&lt;T&gt;: T <em>extends</em> <em>number</em> ? `${T}` | T : T <em>extends</em> <em>true</em> ? <em>true</em> | T : T <em>extends</em> <em>false</em> ? <em>false</em> | T : T</p><h4 id="type-parameters-3"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L18" target="_blank" rel="noopener noreferrer">src/style/index.ts:18</a></p><hr><h3 id="styleprops"><a class="header-anchor" href="#styleprops" aria-hidden="true">#</a> StyleProps</h3><p>Ƭ <strong>StyleProps</strong>&lt;Variants&gt;: <a href="./twind_style.html#variantsprops"><em>VariantsProps</em></a>&lt;Variants&gt; &amp; <a href="./../interfaces/twind_style.basestyleprops.html"><em>BaseStyleProps</em></a></p><h4 id="type-parameters-4"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Variants</code></td></tr></tbody></table><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L90" target="_blank" rel="noopener noreferrer">src/style/index.ts:90</a></p><hr><h3 id="styletoken"><a class="header-anchor" href="#styletoken" aria-hidden="true">#</a> StyleToken</h3><p>Ƭ <strong>StyleToken</strong>: <em>string</em> | <a href="./../interfaces/twind.cssrules.html"><em>CSSRules</em></a> | <a href="./../interfaces/twind.directive.html"><em>Directive</em></a>&lt;<a href="./../interfaces/twind.cssrules.html"><em>CSSRules</em></a>&gt;</p><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L36" target="_blank" rel="noopener noreferrer">src/style/index.ts:36</a></p><hr><h3 id="variantmatchers"><a class="header-anchor" href="#variantmatchers" aria-hidden="true">#</a> VariantMatchers</h3><p>Ƭ <strong>VariantMatchers</strong>&lt;Variants&gt;: { [key in keyof Variants]?: StrictMorphVariant&lt;keyof Variants[key]&gt;}</p><h4 id="type-parameters-5"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Variants</code></td></tr></tbody></table><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L60" target="_blank" rel="noopener noreferrer">src/style/index.ts:60</a></p><hr><h3 id="variantsof"><a class="header-anchor" href="#variantsof" aria-hidden="true">#</a> VariantsOf</h3><p>Ƭ <strong>VariantsOf</strong>&lt;T&gt;: T <em>extends</em> <a href="./../interfaces/twind_style.style.html"><em>Style</em></a>&lt;<em>infer</em> Variants&gt; ? { [key in keyof Variants]: MorphVariant&lt;keyof Variants[key]&gt;} : <em>never</em></p><h4 id="type-parameters-6"><a class="header-anchor" href="#type-parameters-6" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L38" target="_blank" rel="noopener noreferrer">src/style/index.ts:38</a></p><hr><h3 id="variantsprops"><a class="header-anchor" href="#variantsprops" aria-hidden="true">#</a> VariantsProps</h3><p>Ƭ <strong>VariantsProps</strong>&lt;Variants&gt;: { [key in keyof Variants]?: MorphVariant&lt;keyof Variants[key]&gt; | Record&lt;string, MorphVariant&lt;keyof Variants[key]&gt;&gt; &amp; object}</p><h4 id="type-parameters-7"><a class="header-anchor" href="#type-parameters-7" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Variants</code></td></tr></tbody></table><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L52" target="_blank" rel="noopener noreferrer">src/style/index.ts:52</a></p><h2 id="functions"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h2><h3 id="style"><a class="header-anchor" href="#style" aria-hidden="true">#</a> style</h3><p>▸ <code>Const</code><strong>style</strong>&lt;Variants&gt;(<code>config?</code>: <a href="./../interfaces/twind_style.styleconfig.html"><em>StyleConfig</em></a>&lt;Variants, {}&gt;): <a href="./../interfaces/twind_style.style.html"><em>Style</em></a>&lt;Variants&gt; &amp; <em>string</em></p><h4 id="type-parameters-8"><a class="header-anchor" href="#type-parameters-8" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Variants</code></td></tr></tbody></table><h4 id="parameters"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config?</code></td><td style="text-align:left;"><a href="./../interfaces/twind_style.styleconfig.html"><em>StyleConfig</em></a>&lt;Variants, {}&gt;</td></tr></tbody></table><p><strong>Returns:</strong> <a href="./../interfaces/twind_style.style.html"><em>Style</em></a>&lt;Variants&gt; &amp; <em>string</em></p><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L282" target="_blank" rel="noopener noreferrer">src/style/index.ts:282</a></p><p>▸ <code>Const</code><strong>style</strong>&lt;Variants, BaseVariants&gt;(<code>base</code>: <a href="./../interfaces/twind_style.style.html"><em>Style</em></a>&lt;BaseVariants&gt;, <code>config?</code>: <a href="./../interfaces/twind_style.styleconfig.html"><em>StyleConfig</em></a>&lt;Variants, BaseVariants&gt;): <a href="./../interfaces/twind_style.style.html"><em>Style</em></a>&lt;BaseVariants &amp; Variants&gt; &amp; <em>string</em></p><h4 id="type-parameters-9"><a class="header-anchor" href="#type-parameters-9" aria-hidden="true">#</a> Type parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Variants</code></td></tr><tr><td style="text-align:left;"><code>BaseVariants</code></td></tr></tbody></table><h4 id="parameters-2"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters:</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>base</code></td><td style="text-align:left;"><a href="./../interfaces/twind_style.style.html"><em>Style</em></a>&lt;BaseVariants&gt;</td></tr><tr><td style="text-align:left;"><code>config?</code></td><td style="text-align:left;"><a href="./../interfaces/twind_style.styleconfig.html"><em>StyleConfig</em></a>&lt;Variants, BaseVariants&gt;</td></tr></tbody></table><p><strong>Returns:</strong> <a href="./../interfaces/twind_style.style.html"><em>Style</em></a>&lt;BaseVariants &amp; Variants&gt; &amp; <em>string</em></p><p>Defined in: <a href="https://github.com/gojutin/twind/blob/33ffb71/src/style/index.ts#L282" target="_blank" rel="noopener noreferrer">src/style/index.ts:282</a></p>',386);s.render=function(t,n,s,o,p,l){return e(),a("div",null,[r])};export default s;export{n as __pageData};
